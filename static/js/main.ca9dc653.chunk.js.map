{"version":3,"sources":["context/AppContext.js","components/Current.jsx","components/Locations.jsx","components/Forecast.jsx","App.js","index.js","key.js"],"names":["AppContext","React","createContext","city","country","Current","useState","current","setCurrent","data","useContext","API_URL","API_KEY","useEffect","fetch","then","response","json","icon","weather","id","temperature","main","temp","humidity","description","wind","speed","preasure","pressure","name","sys","error","isLoading","catch","console","log","className","Locations","getCurrentLocation","a","axios","get","res","latitude","longitude","onClick","alert","Forecast","list","map","item","dt_txt","dt","toString","App","Provider","value","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ca9dc653.chunk.js","sourcesContent":["import React from 'react';\n\nconst AppContext = React.createContext({\n    city: null,\n    country: null\n});\n\nexport default AppContext;","import React, { useState, useEffect, useContext } from 'react';\nimport AppContext from '../context/AppContext';\nimport { API_KEY } from '../key';\n\nfunction Current() {\n  const [current, setCurrent] = useState([]);\n  const data = useContext(AppContext);\n\n  const city = data.city;\n  const country = data.country;\n\n  const API_URL = `https://api.openweathermap.org/data/2.5/weather?q=${city},${country},&APPID=${API_KEY}&units=metric`;\n\n  useEffect(() => {\n    fetch(API_URL)\n      .then(response => response.json())\n      .then(data => {\n        setCurrent({\n          icon: \"wi-owm-\" + data.weather[0].id,\n          temperature: data.main.temp,\n          humidity: data.main.humidity,\n          description: data.weather[0].description,\n          wind: data.wind.speed,\n          preasure: data.main.pressure,\n          city: data.name,\n          country: data.sys.country,\n          error: null,\n          isLoading: false\n        });\n      })\n      .catch(error => console.log(error));\n  }, []);\n\n  if (current.isLoading) {\n    return(\n      <div className=\"box-border w-full p-8 rounded-md shadow-lg bg-gray-500 bg-opacity-25 text-white text-xl text-center\">\n        Loading...\n      </div>\n    );\n  }\n\n  if (!current) {\n    return(\n      <div className=\"box-border w-full p-8 rounded-md shadow-lg bg-gray-500 bg-opacity-25 text-white text-xl text-center\">\n        <p>No se pudo recuperar datos del clima</p>\n      </div>\n    );\n  }\n\n  return (\n      <div className=\"box-border w-full p-8 rounded-md shadow-lg bg-gray-500 bg-opacity-25 text-white text-2xl\">\n        <p className=\"text-center text-2xl font-bold uppercase\">{current.city}, {current.country}</p>\n        <div className=\"flex mt-8\">\n          <div className=\"flex-auto text-center\">\n            <i className={\"wi \" + current.icon + \" text-white text-9xl\"}></i>\n          </div>\n          <div className=\"flex-auto text-center\">\n            <p className=\"text-xl uppercase\">today</p>\n            <p className=\"text-xl capitalize\">{current.description}</p>\n            <p className=\"text-xl\">{current.temperature} °C</p>\n            <p className=\"text-xl\">{current.preasure} hPa</p>\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default Current;","import React from 'react';\nimport axios from 'axios';\n\nfunction Locations() {\n\n    const getCurrentLocation = async () => {\n        await axios.get('https://geolocation-db.com/json/')\n            .then((res) => {\n                axios.get(\"http://api.openweathermap.org/data/2.5/weather?lat=\"+res.data.latitude+\"&lon=\"+res.data.longitude+\"&APPID=5b6d7711e2a98068bef12e795b6c97f5\")\n                .then((res) => {\n                    console.log(res.data);\n                })\n            });\n    }\n\n    const handleCurrent = () => {\n        getCurrentLocation();\n    }\n\n    const handleLondon = () => {\n        alert('xxx');\n    }\n\n    const handleParis = () => {\n        alert('xxx');\n    }\n\n    const handleTokio = () => {\n        alert('xxx');\n    }\n\n    const handleMilan = () => {\n        alert('xxx');\n    }\n\n    const handleMoscow = () => {\n        alert('xxx');\n    }\n\n    return (\n        <div className=\"box-border w-full p-8 rounded-md shadow-lg bg-gray-500 bg-opacity-25 text-white text-2xl\">\n          <ul className=\"text-center\">\n            <li className=\"cursor-pointer\" onClick={handleCurrent}>Current location</li>\n            <li className=\"cursor-pointer\" onClick={handleLondon}>Londres</li>\n            <li className=\"cursor-pointer\" onClick={handleParis}>París</li>\n            <li className=\"cursor-pointer\" onClick={handleTokio}>Tokio</li>\n            <li className=\"cursor-pointer\" onClick={handleMilan}>Milán</li>\n            <li className=\"cursor-pointer\" onClick={handleMoscow}>Moscú</li>\n          </ul>\n        </div>\n    );\n}\n\nexport default Locations;","import React, { useState, useEffect, useContext } from 'react';\nimport AppContext from '../context/AppContext';\nimport { API_KEY } from '../key';\n\nfunction Forecast() {\n  const [current, setCurrent] = useState([]);\n  const data = useContext(AppContext);\n\n  const city = data.city;\n  const country = data.country;\n\n  const API_URL = `https://api.openweathermap.org/data/2.5/forecast?q=${city},${country},&APPID=${API_KEY}&cnt=5&units=metric`;\n\n  useEffect(() => {\n    fetch(API_URL)\n      .then(response => response.json())\n      .then(data => {\n        //console.log(data);\n        setCurrent(data);\n      })\n      .catch(error => console.log(error));\n  }, []);\n\n  if (false) {\n    return(\n      <div className=\"col-span-2 box-border py-8 w-full rounded-md shadow-lg bg-gray-500 bg-opacity-25 text-white text-center\">\n        <p>Loading...</p>\n      </div>\n    );\n  }\n\n  if (!current.list) {\n    return(\n      <div className=\"col-span-2 box-border py-8 w-full rounded-md shadow-lg bg-gray-500 bg-opacity-25 text-white text-center\">\n        <p>No se pudo recuperar datos del clima</p>\n      </div>\n    );\n  }\n\n  return(\n    <div className=\"col-span-2 box-border py-8 w-full rounded-md shadow-lg bg-gray-500 bg-opacity-25 text-white\">\n      <div className=\"flex\">\n\n      {current.list.map(item => {\n          return(\n            <div className=\"flex-auto text-center\" key={item.dt.toString()}>\n              <p>{item.dt_txt}</p>\n              <i className={\"wi wi-owm-\"+item.weather[0].id+\" text-white text-6xl my-4\"}></i>\n              <p>{item.weather[0].description}</p>\n              <p>{item.main.temp} °C</p>\n              <p>{item.main.pressure} hPa</p>\n            </div>\n          );\n        })}\n\n      </div>\n    </div>\n  );\n}\n\nexport default Forecast;","import Current from './components/Current';\nimport Locations from './components/Locations';\nimport Forecast from './components/Forecast';\nimport AppContext from './context/AppContext';\n\nfunction App() {\n  const appData = {\n    city: 'moscow',\n    country: 'ru'\n  }\n\n  return (\n    <AppContext.Provider value = { appData }>\n      <div className=\"container mx-auto lg:w-1/2\">\n        <h1 className=\"my-10 text-center text-white font-bold text-5xl\">WEATHER-APP</h1>\n        <div className=\"grid grid-cols-2 gap-8\">\n          <Current />\n          <Locations />\n          <Forecast />\n        </div>\n      </div>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = {\n    API_KEY: '5b6d7711e2a98068bef12e795b6c97f5'\n}"],"sourceRoot":""}